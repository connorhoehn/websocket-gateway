version: '3.8'

services:
  # Main websocket gateway with all services (default)
  websocket-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: websocket-gateway
    ports:
      - "8080:8080"
    env_file:
      - config/full-service.env
    environment:
      - REDIS_ENDPOINT=core-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://core-redis:6379
      - NODE_ENV=development
    networks:
      - websocket-network
      - shared-network
    volumes:
      - ./src:/app/src:ro
    restart: unless-stopped
    command: node src/server.js

  # Chat-only service
  chat-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-service
    ports:
      - "8081:8080"
    env_file:
      - config/chat-only.env
    environment:
      - REDIS_ENDPOINT=core-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://core-redis:6379
      - NODE_ENV=development
    networks:
      - websocket-network
      - shared-network
    volumes:
      - ./src:/app/src:ro
    restart: unless-stopped
    command: node src/server.js
    profiles:
      - chat-only

  # Presence-only service
  presence-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: presence-service
    ports:
      - "8082:8080"
    env_file:
      - config/presence-only.env
    environment:
      - REDIS_ENDPOINT=core-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://core-redis:6379
      - NODE_ENV=development
    networks:
      - websocket-network
      - shared-network
    volumes:
      - ./src:/app/src:ro
    restart: unless-stopped
    command: node src/server.js
    profiles:
      - presence-only

  # Cursor-only service
  cursor-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cursor-service
    ports:
      - "8083:8080"
    env_file:
      - config/cursor-only.env
    environment:
      - REDIS_ENDPOINT=core-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://core-redis:6379
      - NODE_ENV=development
    networks:
      - websocket-network
      - shared-network
    volumes:
      - ./src:/app/src:ro
    restart: unless-stopped
    command: node src/server.js
    profiles:
      - cursor-only

  # Local development mode
  websocket-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: websocket-dev
    ports:
      - "8084:8080"
    env_file:
      - config/local-dev.env
    environment:
      - REDIS_ENDPOINT=core-redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://core-redis:6379
      - NODE_ENV=development
    networks:
      - websocket-network
      - shared-network
    volumes:
      - ./src:/app/src
      - ./config:/app/config:ro
    restart: unless-stopped
    command: node src/server.js
    profiles:
      - local-dev

networks:
  websocket-network:
    driver: bridge
  shared-network:
    external: true
